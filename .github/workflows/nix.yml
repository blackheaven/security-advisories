# Our desired pipeline using only a Nix shell environment
name: nix build

on:
  - push
  - pull_request
jobs:
  tools_changed:
    continue-on-error: true
    runs-on: ubuntu-22.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: "never"
          skip_after_successful_duplicate: "true"
          paths: '["code/**"]'
          do_not_skip: '["push", "workflow_dispatch", "schedule"]'
  check_nix:
    name: Check nix build
    needs: tools_changed
    if: ${{ needs.tools_changed.outputs.should_skip != 'true' }}
    runs-on: ubuntu-22.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v4
        with:
          flake-lock-path: ./code/hsec-tools/flake.lock
      - run: nix -L build
        working-directory: ./code/hsec-tools
      - uses: actions/upload-artifact@v3
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        with:
          name: hsec-tools-main
          path: code/hsec-tools/result/bin/hsec-tools
